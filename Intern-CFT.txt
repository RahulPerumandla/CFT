      {
        "AWSTemplateFormatVersion" : "2010-09-09",

        "Description" : "CloudFormation template for a VPC in 2 AZ's with public and private subnets' with a NAT Gateway and Bitnami Wordpress instance in Public Subnet",

        "Parameters" : {

          "KeyName" : {
              "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bitnami host",
              "Type" : "String",
              "MinLength": "1",
              "MaxLength": "64",
              "AllowedPattern" : "[-_ a-zA-Z0-9]*",
              "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
            },
		"SSHLocation" : {
		"Description" : " The IP address range that can be used to SSH to the EC2 instances",
		"Type": "String",
		"MinLength": "9",
		"MaxLength": "18",
		"Default": "0.0.0.0/0",
		"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
		"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		},
      "Az1" : {
       "Description"           : "The availability zone used for Private and Public Subnets 1.",
       "Type"                  : "AWS::EC2::AvailabilityZone::Name",
       "Default"               : ""      
		},
		
		"Az2" : {
		"Description"           : "The availability zone used for Private and Public Subnets 2.",
		"Type"                  : "AWS::EC2::AvailabilityZone::Name",
		"Default"               : ""      
		},		
		        

          "BInstanceType" : {
            "Type" : "String",
                "Default" : "t2.micro",
                "AllowedValues" : ["t2.micro", "m1.small", "m1.large"],
                "Description" : "Enter t2.micro, m1.small, or m1.large. Default is t2.micro."

              }
            },

        "Resources" : {

        "VPC" : {
          "Type" : "AWS::EC2::VPC",
          "Properties" : {
            "CidrBlock" : "10.0.0.0/16",
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "PubSubnetIntern1" : {
          "Type" : "AWS::EC2::Subnet",
          "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
             "AvailabilityZone" : { "Ref" : "Az1" },
            "CidrBlock" : "10.0.1.0/24"
                  }
        },
        "PvtSubnetIntern1" : {
              "Type" : "AWS::EC2::Subnet",
              "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                 "AvailabilityZone" : { "Ref" : "Az1" },
                "CidrBlock" : "10.0.2.0/24"
                          }
            },
        "PubSubnetIntern2" : {
               "Type" : "AWS::EC2::Subnet",
               "Properties" : {
                 "VpcId" : { "Ref" : "VPC" },
                 "AvailabilityZone" : { "Ref" : "Az2" },
                 "CidrBlock" : "10.0.3.0/24"
               }
             },
        "PvtSubnetIntern2" : {
                "Type" : "AWS::EC2::Subnet",
                "Properties" : {
                  "VpcId" : { "Ref" : "VPC" },
                  "AvailabilityZone" : { "Ref" : "Az1" },
                  "CidrBlock" : "10.0.4.0/24"
                              }
              },


        "InternetGateway" : {
          "Type" : "AWS::EC2::InternetGateway",
          "Properties" : {
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
          }
        },

        "AttachGateway" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
             "VpcId" : { "Ref" : "VPC" },
             "InternetGatewayId" : { "Ref" : "InternetGateway" }
           }
        },

        "RouteTablePub" : {
          "Type" : "AWS::EC2::RouteTable",
          "DependsOn":["VPC","AttachGateway"],
          "Properties" : {
            "VpcId" : {"Ref" : "VPC"}
                  }
        },
        "RouteTablePvt": {
         "Type": "AWS::EC2::RouteTable",
         "DependsOn": "VPC",
         "Properties" : {
          "VpcId" : { "Ref" : "VPC" }
         }
        },

        "PubRoute" : {
          "Type" : "AWS::EC2::Route",
          "DependsOn" : "AttachGateway",
          "Properties" : {
            "RouteTableId" : { "Ref" : "RouteTablePub" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : { "Ref" : "InternetGateway" }
          }
        },
        "PvtRoute" : {
              "Type" : "AWS::EC2::Route",
              "Properties" : {
                "RouteTableId" : { "Ref" : "RouteTablePvt" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT" }
              }
            },

        "SubnetRouteTableAssociationPub1" : {
          "Type" : "AWS::EC2::SubnetRouteTableAssociation",
          "DependsOn": ["RouteTablePub","PubSubnetIntern1" ],
          "Properties" : {
            "SubnetId" : { "Ref" : "PubSubnetIntern1" },
            "RouteTableId" : { "Ref" : "RouteTablePub" }
          }
        },
         "SubnetRouteTableAssociationPub2" : {
              "Type" : "AWS::EC2::SubnetRouteTableAssociation",
             "DependsOn": ["RouteTablePub","PubSubnetIntern2" ],
                   "Properties" : {
                     "SubnetId" : { "Ref" : "PubSubnetIntern2" },
                     "RouteTableId" : { "Ref" : "RouteTablePub" }
              }
            },
         "SubnetRouteTableAssociationPvt1" : {
                   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                   "Properties" : {
                     "SubnetId" : { "Ref" : "PvtSubnetIntern1" },
                     "RouteTableId" : { "Ref" : "RouteTablePvt" }
                   }
                 },

         "SubnetRouteTableAssociationPvt2" : {
                   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                   "Properties" : {
                     "SubnetId" : { "Ref" : "PvtSubnetIntern2" },
                     "RouteTableId" : { "Ref" : "RouteTablePvt" }
                   }
                 },

        "PubNetworkAcl" : {
          "Type" : "AWS::EC2::NetworkAcl",
          "Properties" : {
            "VpcId" : {"Ref" : "VPC"}          }
        },

        "InboundHTTPNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "PubNetworkAcl"},
            "RuleNumber" : "100",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "80", "To" : "80"}
          }
        },

        "InboundSSHNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "PubNetworkAcl"},
            "RuleNumber" : "101",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "22", "To" : "22"}
          }
        },

        "InboundResponsePortsNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "PubNetworkAcl"},
            "RuleNumber" : "102",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "false",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "1024", "To" : "65535"}
          }
        },

        "OutBoundPubNetworkAclEntry" : {
          "Type" : "AWS::EC2::NetworkAclEntry",
          "Properties" : {
            "NetworkAclId" : {"Ref" : "PubNetworkAcl"},
            "RuleNumber" : "100",
            "Protocol" : "6",
            "RuleAction" : "allow",
            "Egress" : "true",
            "CidrBlock" : "0.0.0.0/0",
            "PortRange" : {"From" : "0", "To" : "65535"}
          }
        },

        "PubSubnetIntern1NetworkAclAssociation" : {
          "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
          "Properties" : {
            "SubnetId" : { "Ref" : "PubSubnetIntern1" },
            "NetworkAclId" : { "Ref" : "PubNetworkAcl" }
          }
        },
        "PubSubnetIntern2NetworkAclAssociation" : {
          "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
          "Properties" : {
            "SubnetId" : { "Ref" : "PubSubnetIntern2" },
            "NetworkAclId" : { "Ref" : "PubNetworkAcl" }
          }
        },

            "PvtNetworkAcl" : {
              "Type" : "AWS::EC2::NetworkAcl",
              "Properties" : {
                "VpcId" : {"Ref" : "VPC"}
              }
            },

            "InboundPvtNetworkAclEntry" : {
              "Type" : "AWS::EC2::NetworkAclEntry",
              "Properties" : {
                "NetworkAclId" : {"Ref" : "PvtNetworkAcl"},
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : {"From" : "80", "To" : "65535"}
              }
            },
            "OutboundPvtNetworkAclEntry" : {
              "Type" : "AWS::EC2::NetworkAclEntry",
                "Properties" : {
                  "NetworkAclId" : {"Ref" : "PvtNetworkAcl"},
                   "RuleNumber" : "100",
                   "Protocol" : "6",
                   "RuleAction" : "allow",
                   "Egress" : "true",
                   "CidrBlock" : "0.0.0.0/0",
                   "PortRange" : {"From" : "0", "To" : "65535"}
                 }
             },
            "PvtSubnetIntern1NetworkAclAssociation" : {
                  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
                  "Properties" : {
                    "SubnetId" : { "Ref" : "PvtSubnetIntern1" },
                    "NetworkAclId" : { "Ref" : "PvtNetworkAcl" }
                  }
                },
            "PvtSubnetIntern2NetworkAclAssociation" : {
                  "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
                  "Properties" : {
                    "SubnetId" : { "Ref" : "PvtSubnetIntern2" },
                    "NetworkAclId" : { "Ref" : "PvtNetworkAcl" }
                  }
                },
        "NATEIP" : {
          "Type" : "AWS::EC2::EIP",
           "DependsOn" : "AttachGateway",
            "Properties" : {
              "Domain" : "vpc"
              }
        },
        "NAT":{
          "Type":"AWS::EC2::NatGateway",
           "DependsOn":"AttachGateway",
           "Properties":{
             "AllocationId": { "Fn::GetAtt" : ["NATEIP", "AllocationId"]},
			     "SubnetId" : { "Ref" : "PubSubnetIntern1"}
                    }
         },
        

        "InstanceSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "GroupDescription" : "Enable SSH and HTTP access ",
            "SecurityGroupIngress" : [
              {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
              { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "72.196.48.126/32"}, 
              { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "72.196.48.126/32"}
             ]
          }
        },
        "BitnamiInstance" : {
          "Type" : "AWS::EC2::Instance",
          "DependsOn" : "AttachGateway",
          "Properties" : {
            "InstanceType" : { "Ref" : "BInstanceType" },
            "KeyName"  : { "Ref" : "KeyName" },
            "ImageId"  : "ami-f24c19e4",
            "NetworkInterfaces" : [{
              "GroupSet"                 : [{ "Ref" : "InstanceSecurityGroup" }],
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PubSubnetIntern1" }
            }]
          }
        }
      }
      }
